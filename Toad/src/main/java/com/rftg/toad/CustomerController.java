package com.rftg.toad;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/customer")
public class CustomerController extends CustomerSpecifications {
  @Autowired // This means to get the bean called FilmRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private CustomerRepository customerRepository;

  @GetMapping()
  public @ResponseBody Iterable<Customer> getAllCustomer() {
    // This returns a JSON or XML with the Films
    System.out.println("Serveur connecté");
    return customerRepository.findAll();
  }

  @GetMapping("/login")
  public @ResponseBody Customer getCustomerByEmailAndPassword(@RequestParam String email, @RequestParam String password) {
    Specification<Customer> specifications = HasCustomerEmailAndPassword(email, password);
    Optional<Customer> optionalCustomer = customerRepository.findOne(specifications);
    if (optionalCustomer.isPresent()) {
        Customer customer = optionalCustomer.get();
        return customer;
    } else {
        return null;
    }
  }

   @GetMapping("/customer/nom")
   public @ResponseBody List<Customer> whenSearchingByLastNameAndFirstNameLike_thenOneAuthorIsReturned() {
 
     Specification<Customer> specifications = hasLastName("SMITH")
       .and(hasFirstNameLike("Mary"));
 
     List<Customer> customers = customerRepository.findAll(specifications);

     System.out.println("Serveur connecté");
     return customers;
 }
 
     @GetMapping("/customer/prenom")
    public @ResponseBody Iterable<String> getPrenomCustomer() {
        // This returns a JSON or XML with the customer names
        System.out.println("Serveur connecté");
        Iterable<Customer> customers = customerRepository.findAll();

        List<String> customerFirstNames = new ArrayList<>();
        for (Customer customer : customers) {
            customerFirstNames.add(customer.getFirst_name());
        }
        return customerFirstNames;
    }

     @GetMapping("/customer/email")
    public @ResponseBody Iterable<String> getEmailCustomer() {
        // This returns a JSON or XML with the customer names
        System.out.println("Serveur connecté");
        Iterable<Customer> customers = customerRepository.findAll();

        List<String> customerEmail = new ArrayList<>();
        for (Customer customer : customers) {
            customerEmail.add(customer.getEmail());
        }
        return customerEmail;
    }
       @GetMapping("/customer/state")
    public @ResponseBody Iterable<String> getStateCustomer() {
        // This returns a JSON or XML with the customer names
        System.out.println("Serveur connecté");
        Iterable<Customer> customers = customerRepository.findAll();

        List<String> customerState = new ArrayList<>();
        for (Customer customer : customers) {
            customerState.add(customer.getActive());
        }
        return customerState;
    }

}
